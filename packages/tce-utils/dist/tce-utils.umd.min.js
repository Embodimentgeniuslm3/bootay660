!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).TceUtils={})}(this,(function(t){"use strict";function e(t){return function(t){if(Array.isArray(t))return n(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return n(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return n(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function n(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var r={ADD_BEFORE:"ADD_BEFORE",ADD_AFTER:"ADD_AFTER",ADD_INTO:"ADD_INTO",REORDER:"REORDER"},o=Object.freeze({__proto__:null,default:r}),i=r.ADD_AFTER,a=r.REORDER,u=function(t,e){var n=t.lower,r=void 0===n?0:n,o=t.upper,i=o?(o-r)/(e+1):1;return Array.from({length:e}).map((function(t,e){return i*(e+1)+r}))};function c(t){Object.prototype.hasOwnProperty.call(t,"isFirstChild")&&console.warn("Deprecation notice:\n    'isFirstChild' option is deprecated and no longer used!\n    Providing it does not affect this function.")}var f=function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=t[e-1]||{},o=r.position,i=t[e]||{},a=i.position;return u({lower:o,upper:a},n)};t.InsertLocation=o,t.calculatePosition=function(t){var n=t.newPosition,r=t.items,o=t.action,u=void 0===o?a:o,l=t.count,s=void 0===l?1:l;c.apply(void 0,arguments);var p=e(r);u===a&&p.splice(n,s);var d=r.length;void 0!==n&&(d=u===i?n+1:n);var y=f(p,d,s);return 1===s?y[0]:y},t.getPositions=f,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=tce-utils.umd.min.js.map
