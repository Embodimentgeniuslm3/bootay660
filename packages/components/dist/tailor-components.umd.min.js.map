{"version":3,"file":"tailor-components.umd.min.js","sources":["../../../node_modules/delay/index.js","../../../node_modules/p-min-delay/index.js","../src/loader.js","../src/upload.js","../src/download.js","../src/components/InputAsset.vue"],"sourcesContent":["'use strict';\n\n// From https://github.com/sindresorhus/random-int/blob/c37741b56f76b9160b0b63dae4e9c64875128146/index.js#L13-L15\nconst randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n\tconst error = new Error('Delay aborted');\n\terror.name = 'AbortError';\n\treturn error;\n};\n\nconst createDelay = ({clearTimeout: defaultClear, setTimeout: set, willResolve}) => (ms, {value, signal} = {}) => {\n\tif (signal && signal.aborted) {\n\t\treturn Promise.reject(createAbortError());\n\t}\n\n\tlet timeoutId;\n\tlet settle;\n\tlet rejectFn;\n\tconst clear = defaultClear || clearTimeout;\n\n\tconst signalListener = () => {\n\t\tclear(timeoutId);\n\t\trejectFn(createAbortError());\n\t};\n\n\tconst cleanup = () => {\n\t\tif (signal) {\n\t\t\tsignal.removeEventListener('abort', signalListener);\n\t\t}\n\t};\n\n\tconst delayPromise = new Promise((resolve, reject) => {\n\t\tsettle = () => {\n\t\t\tcleanup();\n\t\t\tif (willResolve) {\n\t\t\t\tresolve(value);\n\t\t\t} else {\n\t\t\t\treject(value);\n\t\t\t}\n\t\t};\n\n\t\trejectFn = reject;\n\t\ttimeoutId = (set || setTimeout)(settle, ms);\n\t});\n\n\tif (signal) {\n\t\tsignal.addEventListener('abort', signalListener, {once: true});\n\t}\n\n\tdelayPromise.clear = () => {\n\t\tclear(timeoutId);\n\t\ttimeoutId = null;\n\t\tsettle();\n\t};\n\n\treturn delayPromise;\n};\n\nconst delay = createDelay({willResolve: true});\ndelay.reject = createDelay({willResolve: false});\ndelay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\ndelay.createWithTimers = ({clearTimeout, setTimeout}) => {\n\tconst delay = createDelay({clearTimeout, setTimeout, willResolve: true});\n\tdelay.reject = createDelay({clearTimeout, setTimeout, willResolve: false});\n\treturn delay;\n};\n\nmodule.exports = delay;\n// TODO: Remove this for the next major release\nmodule.exports.default = delay;\n","'use strict';\nconst delay = require('delay');\n\nconst pMinDelay = async (promise, minimumDelay, options) => {\n\toptions = {\n\t\tdelayRejection: true,\n\t\t...options\n\t};\n\n\tlet promiseError;\n\n\tif (options.delayRejection) {\n\t\tpromise = promise.catch(error => {\n\t\t\tpromiseError = error;\n\t\t});\n\t}\n\n\tconst value = await Promise.all([promise, delay(minimumDelay)]);\n\treturn promiseError ? Promise.reject(promiseError) : value[0];\n};\n\nmodule.exports = pMinDelay;\n// TODO: Remove this for the next major release\nmodule.exports.default = pMinDelay;\n","import pMinDelay from 'p-min-delay';\n\nexport default function loader(action, name, minDuration = 0) {\n  return function () {\n    this[name] = true;\n    return pMinDelay(Promise.resolve(action.call(this, ...arguments)), minDuration)\n      .finally(() => (this[name] = false));\n  };\n}\n","import downloadMixin from './download.js';\nimport loader from './loader';\nimport { mapRequests } from '@extensionengine/vue-radio';\n\nexport default {\n  inject: ['$storageService', '$editorContent'],\n  mixins: [downloadMixin],\n  data: () => ({ uploading: false }),\n  computed: {\n    repositoryId() {\n      return this.$editorContent.repository.id;\n    }\n  },\n  methods: {\n    ...mapRequests('app', ['showConfirmationModal']),\n    createFileForm(e) {\n      this.form = new FormData();\n      const [file] = e.target.files;\n      if (!file) return;\n      this.form.append('file', file, file.name);\n    },\n    upload: loader(function (e) {\n      this.createFileForm(e);\n      return this.$storageService.upload(this.repositoryId, this.form)\n        .then(data => {\n          const { name } = this.form.get('file');\n          this.$emit('upload', { ...data, name });\n        }).catch(() => {\n          this.error = 'An error has occurred!';\n        });\n    }, 'uploading'),\n    async downloadFile(key, name) {\n      const url = await this.$storageService.getUrl(this.repositoryId, key);\n      return this.download(url, name);\n    },\n    deleteFile(item) {\n      this.showConfirmationModal({\n        title: 'Delete file?',\n        message: `Are you sure you want to remove ${item.fileName}?`,\n        action: () => this.$emit('delete', item.id, null)\n      });\n    }\n  }\n};\n","export default {\n  methods: {\n    download(url, fileName) {\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = fileName;\n      a.target = '_blank';\n      a.click();\n    }\n  }\n};\n","<template>\n  <v-toolbar-items>\n    <v-btn\n      v-if=\"url && !isEditing\"\n      :href=\"publicUrl || url\"\n      target=\"_blank\"\n      color=\"info\"\n      text>\n      <v-icon>mdi-open-in-new</v-icon>\n    </v-btn>\n    <upload-btn\n      v-if=\"allowFileUpload\"\n      v-show=\"!file && isEditing\"\n      @upload=\"val => (file = val) && (urlInput = null)\"\n      :uploading.sync=\"uploading\"\n      :validate=\"{ ext: extensions }\"\n      :confirm-deletion=\"false\"\n      :label=\"uploadLabel\"\n      class=\"upload-btn\" />\n    <template v-if=\"file\">\n      <v-btn\n        v-if=\"isEditing\"\n        @click.stop=\"file = null\"\n        color=\"red\"\n        text>\n        <v-icon>mdi-delete</v-icon>\n      </v-btn>\n      <v-text-field\n        :value=\"fileName\"\n        readonly hide-details filled />\n    </template>\n    <validation-provider\n      v-if=\"!uploading && (urlInput || !hasAsset)\"\n      ref=\"provider\"\n      v-slot=\"{ errors }\"\n      :rules=\"{\n        url: {\n          protocols: ['http', 'https'],\n          require_protocol: true,\n          require_valid_protocol: true\n        }\n      }\"\n      name=\"URL\">\n      <v-text-field\n        v-model=\"urlInput\"\n        :error-messages=\"errors\"\n        :disabled=\"!isEditing\"\n        :placeholder=\"allowFileUpload ? 'or paste a URL...' : 'Paste a URL...'\"\n        filled clearable />\n    </validation-provider>\n    <v-btn\n      v-if=\"!isEditing\"\n      @click.stop=\"isEditing = true\"\n      text\n      class=\"action\">\n      Edit\n    </v-btn>\n    <template v-else>\n      <v-btn\n        v-if=\"hasChanges\"\n        @click.stop=\"save\"\n        :disabled=\"uploading\"\n        text\n        class=\"action\">\n        Save\n      </v-btn>\n      <v-btn\n        v-if=\"hasChanges || url\"\n        @click.stop=\"cancel\"\n        :disabled=\"uploading\"\n        text\n        class=\"action\">\n        Cancel\n      </v-btn>\n    </template>\n  </v-toolbar-items>\n</template>\n\n<script>\nimport get from 'lodash/get';\nimport last from 'lodash/last';\nimport pick from 'lodash/pick';\nimport UploadBtn from './UploadBtn.vue';\n\nfunction isUploaded(url) {\n  try {\n    return url && new URL(url).protocol === 'storage:';\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default {\n  name: 'tailor-input-asset',\n  props: {\n    url: { type: String, default: null },\n    publicUrl: { type: String, default: null },\n    extensions: { type: Array, required: true },\n    allowFileUpload: { type: Boolean, default: true },\n    uploadLabel: { type: String, default: 'Select file' }\n  },\n  data() {\n    const isLinked = !isUploaded(this.url);\n    return {\n      isEditing: !this.url,\n      uploading: false,\n      file: isLinked ? null : pick(this, ['url', 'publicUrl']),\n      urlInput: isLinked ? this.url : null\n    };\n  },\n  computed: {\n    hasAsset: vm => vm.file || vm.urlInput,\n    isLinked: vm => !!vm.urlInput,\n    hasChanges: vm => vm.url !== (vm.isLinked ? vm.urlInput : get(vm, 'file.url', null)),\n    fileName() {\n      if (!this.file) return null;\n      return last(this.file.url.split('___'));\n    }\n  },\n  methods: {\n    async save() {\n      if (this.$refs.provider) {\n        const { valid } = await this.$refs.provider.validate();\n        if (!valid) return;\n      }\n      this.isEditing = false;\n      const payload = this.file || { url: this.urlInput, publicUrl: this.urlInput };\n      this.$emit('input', payload);\n    },\n    cancel() {\n      const isLinked = !isUploaded(this.url);\n      this.urlInput = isLinked ? this.url : null;\n      this.file = isLinked ? null : pick(this, ['url', 'publicUrl']);\n      this.isEditing = !this.url;\n    }\n  },\n  components: { UploadBtn }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.v-text-field {\n  min-width: 21.875rem;\n  margin: 0.5rem 0.75rem 0 1.75rem;\n}\n\n.action ::v-deep .v-btn__content {\n  min-width: 4rem !important;\n}\n\n.upload-btn ::v-deep .v-btn {\n  height: 100%;\n\n  .v-btn__content {\n    padding: 1.5rem 0;\n  }\n}\n</style>\n"],"names":["createAbortError","error","Error","name","createDelay","defaultClear","clearTimeout","set","setTimeout","willResolve","ms","timeoutId","settle","rejectFn","value","signal","aborted","Promise","reject","clear","signalListener","cleanup","removeEventListener","delayPromise","resolve","addEventListener","once","delay","range","minimum","maximum","options","Math","floor","random","randomInteger","createWithTimers","module","pMinDelay","async","promise","minimumDelay","promiseError","delayRejection","catch","all","loader","action","minDuration","call","this","arguments","finally","_this","inject","mixins","methods","download","url","fileName","a","document","createElement","href","target","click","data","uploading","computed","repositoryId","$editorContent","repository","id","mapRequests","createFileForm","e","form","FormData","file","files","append","upload","$storageService","then","get","$emit","downloadFile","key","getUrl","deleteFile","item","showConfirmationModal","title","message","_this2"],"mappings":"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"}