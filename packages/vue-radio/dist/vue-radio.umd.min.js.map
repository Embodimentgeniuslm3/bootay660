{"version":3,"file":"vue-radio.umd.min.js","sources":["../src/radio.js","../src/helpers.js","../src/index.js"],"sourcesContent":["const isFunction = arg => typeof arg === 'function';\nconst last = arr => arr[arr.length - 1];\nconst noop = () => { };\nconst replyEvent = id => `reply->${id}`;\nconst requestEvent = id => `request->${id}`;\n\nclass Channel {\n  constructor(bus, id) {\n    this._bus = bus;\n    this._id = id;\n    this._repliers = new Map();\n  }\n\n  eventName = event => this._id ? [this._id, event].join('/') : event;\n\n  emit = delegateBus('$emit')\n  on = delegateBus('$on')\n  once = delegateBus('$once')\n  off = delegateBus('$off')\n\n  request(id, ...args) {\n    const onReply = isFunction(last(args)) ? args.pop() : noop;\n    this.once(replyEvent(id), onReply);\n    this.emit(requestEvent(id), ...args);\n    return this;\n  }\n\n  reply(id, listener) {\n    const callback = (...args) => this.emit(replyEvent(id), ...args);\n    const onRequest = (...args) => listener(...args, callback);\n    this._repliers.set(listener, onRequest);\n    this.on(requestEvent(id), onRequest);\n    return this;\n  }\n\n  replyOnce(id, listener) {\n    const callback = (...args) => this.emit(replyEvent(id), ...args);\n    const onRequest = (...args) => listener(...args, callback);\n    this._repliers.set(listener, onRequest);\n    this.once(requestEvent(id), onRequest);\n    return this;\n  }\n\n  stopReplying(id, listener) {\n    const onRequest = this._repliers.get(listener);\n    if (onRequest) this._repliers.delete(onRequest);\n    this.off(requestEvent(id), onRequest);\n    return this;\n  }\n}\n\nfunction delegateBus(method) {\n  return function (event, ...args) {\n    this._bus[method](this.eventName(event), ...args);\n    return this;\n  };\n}\n\nexport default class Radio {\n  static _instance = null;\n  static _channels = new Map();\n\n  constructor(bus) {\n    this._bus = bus;\n  }\n\n  channel(id) {\n    const { _channels: channels } = this.constructor;\n    if (channels.has(id)) return channels.get(id);\n    const channel = new Channel(this._bus, id);\n    channels.set(id, channel);\n    return channel;\n  }\n\n  static getInstance(vm) {\n    this._instance = this._instance = new Radio(vm.$root);\n    return this._instance;\n  }\n}\n","const isFunction = arg => typeof arg === 'function';\n\nexport function mapChannels(channels) {\n  return mapKeys(castObject(channels), name => {\n    return vm => vm.$radio.channel(name);\n  });\n}\n\nexport function mapRequests(channel, requests) {\n  const getChannel = !isFunction(channel)\n    ? vm => vm.$radio.channel(channel)\n    : channel;\n  return mapKeys(castObject(requests), request => {\n    return function (...args) {\n      return getChannel(this).request(request, ...args);\n    };\n  });\n}\n\nfunction castObject(arg) {\n  if (!Array.isArray(arg)) return arg;\n  return arg.reduce((acc, name) => {\n    return Object.assign(acc, { [name]: name });\n  }, {});\n}\n\nfunction mapKeys(obj, cb) {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    value = cb(value, key);\n    return Object.assign(acc, { [key]: value });\n  }, {});\n}\n","import Radio from './radio';\n\nexport const install = Vue => {\n  Object.defineProperty(Vue.prototype, '$radio', {\n    get() {\n      const radio = Radio.getInstance(this);\n      return {\n        channel: id => wrapChannel(radio.channel(id), this),\n        emit: delegateChannel('emit'),\n        on: delegateChannel('on'),\n        once: delegateChannel('once'),\n        off: delegateChannel('off'),\n        request: delegateChannel('request'),\n        reply: delegateChannel('reply'),\n        replyOnce: delegateChannel('replyOnce'),\n        stopReplying: delegateChannel('stopReplying')\n      };\n\n      function delegateChannel(method) {\n        return (channelId, ...args) => {\n          const channel = this.channel(channelId);\n          channel[method](...args);\n          return this;\n        };\n      }\n    }\n  });\n};\n\nexport * from './helpers';\nexport default install;\n\nfunction wrapChannel(channel, vm) {\n  const cleanup = new (class extends Map {\n    constructor(vm) {\n      super();\n      this._vm = vm;\n    }\n\n    set(listener, disposeFn) {\n      if (!this.size) this._vm.$once('hook:beforeDestroy', this.run);\n      super.set(listener, disposeFn);\n      return this;\n    }\n\n    delete(listener) {\n      super.delete(listener);\n      if (!this.size) this._vm.$off('hook:beforeDestroy', this.run);\n      return this;\n    }\n\n    run = () => this.forEach(disposeFn => disposeFn());\n  })(vm);\n\n  return {\n    // Proxy method invocations.\n    emit: channel.emit.bind(channel),\n    request: channel.request.bind(channel),\n    // Autoclean listener registrations.\n    on(event, listener) {\n      cleanup.set(listener, () => channel.off(event, listener));\n      return channel.on(event, listener);\n    },\n    once(event, listener) {\n      cleanup.set(listener, () => channel.off(event, listener));\n      return channel.once(event, listener);\n    },\n    reply(id, listener) {\n      cleanup.set(listener, () => channel.stopReplying(id, listener));\n      return channel.reply(id, listener);\n    },\n    replyOnce(id, listener) {\n      cleanup.set(listener, () => channel.stopReplying(id, listener));\n      return channel.replyOnce(id, listener);\n    },\n    off(event, listener) {\n      cleanup.delete(listener);\n      return channel.off(event, listener);\n    },\n    stopReplying(id, listener) {\n      cleanup.delete(listener);\n      return channel.stopReplying(id, listener);\n    }\n  };\n}\n"],"names":["isFunction","arg","last","arr","length","noop","replyEvent","id","requestEvent","Channel","bus","event","_this","_id","join","delegateBus","_bus","_repliers","Map","args","onReply","pop","once","emit","this","listener","callback","_this2","onRequest","set","on","_this3","get","off","method","eventName","Radio","channels","constructor","_channels","has","channel","vm","_instance","$root","castObject","Array","isArray","reduce","acc","name","Object","assign","mapKeys","obj","cb","entries","key","value","install","Vue","defineProperty","prototype","radio","getInstance","cleanup","forEach","disposeFn","_vm","size","$once","run","$off","bind","request","reply","stopReplying","replyOnce","wrapChannel","delegateChannel","channelId","$radio","requests","getChannel"],"mappings":"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"}