{"version":3,"file":"api.umd.min.js","sources":["../src/request.js","../src/activity.js","../src/asset.js","../src/auth.js","../src/helpers.js","../src/contentElement.js","../src/feed.js","../src/repository.js","../src/revision.js","../src/tag.js","../src/user.js"],"sourcesContent":["import axios, { Axios } from 'axios';\nimport { FORBIDDEN, UNAUTHORIZED } from 'http-status-codes';\nimport buildFullPath from 'axios/lib/core/buildFullPath';\n\nAxios.prototype.submitForm = function (url, fields, options) {\n  const action = buildFullPath(this.defaults.baseURL, url);\n  return Promise.resolve(submitForm(action, fields, options));\n};\n\nconst config = {\n  baseURL: process.env.API_PATH,\n  withCredentials: true,\n  headers: { 'Content-Type': 'application/json' }\n};\n\n// Instance of axios to be used for all API requests.\nconst client = axios.create(config);\n\n// Attach additional instance without interceptors\nObject.defineProperty(client, 'base', {\n  get() {\n    if (!this.base_) this.base_ = axios.create(config);\n    return this.base_;\n  }\n});\n\nconst isAuthError = err => [FORBIDDEN, UNAUTHORIZED].includes(err.response?.status);\n\nclient.interceptors.response.use(res => res, err => {\n  if (isAuthError(err)) return window.location.reload();\n  throw err;\n});\n\nexport default client;\n\nfunction submitForm(action, fields = {}, options) {\n  const form = document.createElement('form');\n  Object.assign(form, { method: 'POST', target: 'blank', action }, options);\n  Object.entries(fields).forEach(([name, attrs]) => {\n    const input = document.createElement('input');\n    Object.assign(input, { name }, attrs);\n    form.appendChild(input);\n  });\n  document.body.appendChild(form);\n  form.submit();\n  form.remove();\n}\n","import request from './request';\n\nconst urls = {\n  root: repositoryId => `/repositories/${repositoryId}/activities`\n};\n\nfunction getActivities(repositoryId, params) {\n  return request.get(urls.root(repositoryId), { params })\n    .then(res => res.data.data);\n}\n\nfunction createPreview(repositoryId, activityId) {\n  return request.get(`${urls.root(repositoryId)}/${activityId}/preview`)\n    .then(res => res.data.location);\n}\n\nexport default {\n  createPreview,\n  getActivities\n};\n","import request from './request';\n\nconst urls = {\n  base: repositoryId => `/repositories/${repositoryId}/assets`\n};\n\nfunction getUrl(repositoryId, key) {\n  const params = { key };\n  return request.get(urls.base(repositoryId), { params }).then(res => res.data.url);\n}\n\nfunction upload(repositoryId, data) {\n  return request.post(urls.base(repositoryId), data).then(res => res.data);\n}\n\nexport default {\n  getUrl,\n  upload\n};\n","import request from './request';\n\nconst urls = {\n  login: '/users/login',\n  logout: '/users/logout',\n  forgotPassword: '/users/forgot-password',\n  resetPassword: '/users/reset-password',\n  profile: '/users/me',\n  changePassword: '/users/me/change-password'\n};\n\nfunction login(credentials) {\n  return request.base.post(urls.login, credentials);\n}\n\nfunction logout() {\n  return request.get(urls.logout);\n}\n\nfunction forgotPassword(email) {\n  return request.post(urls.forgotPassword, { email });\n}\n\nfunction resetPassword(token, password) {\n  return request.post(urls.resetPassword, { token, password });\n}\n\nfunction changePassword(currentPassword, newPassword) {\n  return request.post(urls.changePassword, { currentPassword, newPassword });\n}\n\nfunction getUserInfo() {\n  return request.base.get(urls.profile);\n}\n\nfunction updateUserInfo(userData) {\n  return request.patch(urls.profile, userData);\n}\n\nexport default {\n  login,\n  logout,\n  forgotPassword,\n  resetPassword,\n  getUserInfo,\n  updateUserInfo,\n  changePassword\n};\n","export function extractData(res) {\n  return res.data.data;\n}\n","import { extractData } from './helpers';\nimport request from './request';\n\nconst urls = {\n  repository: id => `/repositories/${id}`,\n  root: repositoryId => `${urls.repository(repositoryId)}/content-elements`,\n  resource: (repositoryId, id) => `${urls.root(repositoryId)}/${id}`\n};\n\nfunction fetch({ repositoryId, ...params }) {\n  return request.get(urls.root(repositoryId), { params }).then(extractData);\n}\n\nfunction patch({ repositoryId, id }, data) {\n  return request.patch(urls.resource(repositoryId, id), data);\n}\n\nexport default {\n  fetch,\n  patch\n};\n","import { extractData } from './helpers';\nimport request from './request';\n\nconst urls = {\n  root: repositoryId => `/repositories/${repositoryId}/feed`,\n  subscribe: repositoryId => `${urls.root(repositoryId)}/subscribe`\n};\n\nfunction fetch(repositoryId) {\n  return request.get(urls.root(repositoryId)).then(extractData);\n}\n\nfunction start(context) {\n  return request.post(urls.root(context.repositoryId), { context });\n}\n\nfunction end(context) {\n  return request.delete(urls.root(context.repositoryId), { data: { context } });\n}\n\nexport default {\n  urls,\n  fetch,\n  start,\n  end\n};\n","import { extractData } from './helpers';\nimport request from './request';\n\nconst urls = {\n  root: '/repositories',\n  import: () => `${urls.root}/import`,\n  resource: id => `${urls.root}/${id}`,\n  publish: id => `${urls.resource(id)}/publish`,\n  exportInit: id => `${urls.resource(id)}/export/setup`,\n  export: (id, jobId) => `${urls.resource(id)}/export/${jobId}`,\n  users: (id, userId = '') => `${urls.resource(id)}/users/${userId}`,\n  tags: (id, tagId = '') => `${urls.resource(id)}/tags/${tagId}`\n};\n\nfunction save(repository) {\n  return request.post(urls.root, repository).then(extractData);\n}\n\nfunction get(repositoryId, params) {\n  return request.get(urls.resource(repositoryId), { params }).then(extractData);\n}\n\nfunction getRepositories(params) {\n  return request.get(urls.root, { params }).then(extractData);\n}\n\nfunction getUsers(repositoryId, params) {\n  return request\n    .get(urls.users(repositoryId), { params })\n    .then(extractData);\n}\n\nfunction upsertUser(repositoryId, data) {\n  return request\n    .post(urls.users(repositoryId), data)\n    .then(res => extractData(res).user);\n}\n\nfunction removeUser(repositoryId, userId) {\n  return request\n    .delete(urls.users(repositoryId, userId))\n    .then(res => res.data);\n}\n\nfunction publishRepositoryMeta(id) {\n  return request.post(urls.publish(id)).then(res => res.data);\n}\n\nfunction addTag({ name, repositoryId }) {\n  return request.post(urls.tags(repositoryId), { repositoryId, name })\n    .then(extractData);\n}\n\nfunction removeTag({ repositoryId, tagId }) {\n  return request.delete(urls.tags(repositoryId, tagId))\n    .then(extractData);\n}\n\nfunction initiateExportJob(repositoryId) {\n  return request.get(urls.exportInit(repositoryId))\n    .then(extractData);\n}\n\nfunction exportRepository(repositoryId, jobId, fields) {\n  return request.submitForm(urls.export(repositoryId, jobId), fields);\n}\n\nfunction importRepository(data, options) {\n  return request.post(urls.import(), data, options);\n}\n\nexport default {\n  get,\n  getRepositories,\n  save,\n  getUsers,\n  upsertUser,\n  removeUser,\n  publishRepositoryMeta,\n  addTag,\n  removeTag,\n  initiateExportJob,\n  exportRepository,\n  importRepository\n};\n","import { extractData } from './helpers';\nimport request from './request';\n\nconst urls = {\n  root: repositoryId => `/repositories/${repositoryId}/revisions`,\n  timeTravel: repositoryId => `/repositories/${repositoryId}/revisions/time-travel`,\n  resource: (repositoryId, id) => `${urls.root(repositoryId)}/${id}`\n};\n\nfunction fetch(repositoryId, params) {\n  return request.get(urls.root(repositoryId), { params }).then(extractData);\n}\n\nfunction getStateAtMoment(repositoryId, params) {\n  return request.get(urls.timeTravel(repositoryId), { params })\n    .then(extractData);\n}\n\nfunction get(repositoryId, id, params) {\n  return request.get(urls.resource(repositoryId, id), { params })\n    .then(res => res.data);\n}\n\nexport default {\n  fetch,\n  getStateAtMoment,\n  get\n};\n","import { extractData } from './helpers';\nimport request from './request';\n\nconst urls = {\n  root: '/tags'\n};\n\nfunction fetch(params) {\n  return request.get(urls.root, { params }).then(extractData);\n}\n\nexport default {\n  fetch\n};\n","import { extractData } from './helpers';\nimport request from './request';\n\nfunction fetch(params) {\n  return request.get('/users', { params }).then(extractData);\n}\n\nfunction upsert(data) {\n  return request.post('/users', data).then(extractData);\n}\n\nfunction remove({ id }) {\n  return request.delete(`/users/${id}`);\n}\n\nfunction reinvite({ id }) {\n  return request.post(`/users/${id}/reinvite`);\n}\n\nexport default {\n  fetch,\n  upsert,\n  remove,\n  reinvite\n};\n"],"names":["prototype","submitForm","url","fields","options","action","buildFullPath","this","defaults","baseURL","Promise","resolve","form","document","createElement","Object","assign","method","target","entries","forEach","name","attrs","input","appendChild","body","submit","remove","config","process","env","API_PATH","withCredentials","headers","client","axios","create","defineProperty","get","base_","interceptors","response","use","res","err","FORBIDDEN","UNAUTHORIZED","includes","_err$response","status","isAuthError","window","location","reload","urls","repositoryId","createPreview","activityId","request","then","data","getActivities","params","getUrl","key","upload","post","login","credentials","base","logout","forgotPassword","email","resetPassword","token","password","getUserInfo","updateUserInfo","userData","patch","changePassword","currentPassword","newPassword","extractData","repository","id","root","resource","fetch","subscribe","start","context","end","delete","import","publish","exportInit","export","jobId","users","userId","tags","tagId","getRepositories","save","getUsers","upsertUser","user","removeUser","publishRepositoryMeta","addTag","removeTag","initiateExportJob","exportRepository","importRepository","timeTravel","getStateAtMoment","upsert","reinvite"],"mappings":"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"}